
@model BuckeyeGolf.ViewModels.AddRoundWeekViewModel
@using (Html.BeginForm("Index", "AddResult", FormMethod.Post))
{
    @Html.AntiForgeryToken();

    if (ViewBag.Empty == true)
    {
        <div class="row">
            <div class="col-md-12">
                <h3>All rounds have been played.  Please add matchups for the week before adding results.</h3>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-12">
                <h2>Add Results for Week #@ViewBag.WeekNbr @Html.HiddenFor(m => m.WeekId)</h2>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <p>Front/Back:</p>
            </div>
            <div class="col-md-10">
                <p>
                    <span>@Html.RadioButtonFor(m => m.FrontBack, "Front") @ViewBag.FrontBackList[0]</span>&nbsp;&nbsp;
                    <span>@Html.RadioButtonFor(m => m.FrontBack, "Back") @ViewBag.FrontBackList[1]</span>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <p>Season Half:</p>
            </div>
            <div class="col-md-10">
                <p>
                    <span>@Html.RadioButtonFor(m => m.FirstHalf, "First") First</span>&nbsp;&nbsp;
                    <span>@Html.RadioButtonFor(m => m.FirstHalf, "Second") Second</span>
            </div>
        </div>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Player</th>
                    <th>1</th>
                    <th>2</th>
                    <th>3</th>
                    <th>4</th>
                    <th>5</th>
                    <th>6</th>
                    <th>7</th>
                    <th>8</th>
                    <th>9</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.PlayerRounds.Count(); i++)
                {
                    <tr>
                        <td>@Html.DisplayFor(m => m.PlayerRounds[i].PlayerName) @Html.HiddenFor(m => m.PlayerRounds[i].PlayerId)</td>
                        @for (int j = 0; j < Model.PlayerRounds[i].Scores.Count(); j++)
                        {
                            <td>@Html.TextBoxFor(m => m.PlayerRounds[i].Scores[j], new { @type = "number", @min = "0", @max = "99", @class = "scoreInput" })</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
        <div class="row">
            <div class="col-md-12">
                <p></p>
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </div>
    }
}
